services:
  app:
    build:
      context: ../../
      dockerfile: infra/development/Dockerfile.development
    container_name: ai-document-backend-dev
    volumes:
      - ../../:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - db
    networks:
      - app_net

  db:
    image: postgres:15-alpine
    container_name: postgres-ai-document-dev
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net

  redis:
    image: redis:alpine3.22
    container_name: redis-ai-document-dev
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  vector_db:
    image: chromadb/chroma
    container_name: chromadb-ai-document-dev
    restart: always
    environment:
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS='*'
      - CHROMA_OPEN_TELEMETRY__ENDPOINT=http://otel-collector:4317/
      - CHROMA_OPEN_TELEMETRY__SERVICE_NAME=chroma
    ports:
      - 8000:8000
    networks:
      - app_net
      - otel_net
    volumes:
      - chroma_data:/data
    depends_on:
      - otel-collector
      - zipkin

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-for-chromadb-ai-document-dev
    ports:
      - 9411:9411
    depends_on: [otel-collector]
    networks:
      - otel_net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.111.0
    container_name: otel-collector-for-chromadb-ai-document-dev
    command: ['--config=/etc/otel-collector-config.yaml']
    volumes:
      - ${PWD}/config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - otel_net

networks:
  app_net:
  otel_net:

volumes:
  db_data:
  chroma_data:
  redis_data:
